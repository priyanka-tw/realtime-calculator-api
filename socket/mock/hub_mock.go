// Code generated by MockGen. DO NOT EDIT.
// Source: socket/hub.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	"realtime-calculator-api/socket/model"
	reflect "reflect"
)

// MockHub is a mock of Hub interface
type MockHub struct {
	ctrl     *gomock.Controller
	recorder *MockHubMockRecorder
}

// MockHubMockRecorder is the mock recorder for MockHub
type MockHubMockRecorder struct {
	mock *MockHub
}

// NewMockHub creates a new mock instance
func NewMockHub(ctrl *gomock.Controller) *MockHub {
	mock := &MockHub{ctrl: ctrl}
	mock.recorder = &MockHubMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHub) EXPECT() *MockHubMockRecorder {
	return m.recorder
}

// RegisteredClients mocks base method
func (m *MockHub) RegisteredClients() map[*model.Client]bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisteredClients")
	ret0, _ := ret[0].(map[*model.Client]bool)
	return ret0
}

// RegisteredClients indicates an expected call of RegisteredClients
func (mr *MockHubMockRecorder) RegisteredClients() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisteredClients", reflect.TypeOf((*MockHub)(nil).RegisteredClients))
}
